<!--
***********************************************************************************************
Microsoft.NET.Sdk.Publish.MSDeploy.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your web deploy projects from the command-line or the IDE.

This file defines the steps in the standard build process to deploy web application projects.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  ***********************************************************************************************
  Including the tasks
  ***********************************************************************************************
 -->
  <UsingTask TaskName="MSDeploy" AssemblyFile="$(_PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="VSMSDeploy" AssemblyFile="$(_PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="NormalizeServiceUrl" AssemblyFile="$(_PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="ValidateParameter" AssemblyFile="$(_PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="RegexEscape" AssemblyFile="$(_PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="CreateManifestFile" AssemblyFile="$(_PublishTaskAssemblyFullPath)" />
  <UsingTask TaskName="CreateParameterFile" AssemblyFile="$(_PublishTaskAssemblyFullPath)" />

  <PropertyGroup>
    <_DotNetPublishFiles>
      $(_DotNetPublishFiles);
      MSDeployPublish;
    </_DotNetPublishFiles>
  </PropertyGroup>


  <PropertyGroup>
    <_MsDeploySourceManifestPath Condition="'$(_MsDeploySourceManifestPath)' == ''">$(PublishIntermediateTempPath)$(MSBuildProjectName).SourceManifest.xml</_MsDeploySourceManifestPath>
    <_MSDeployParametersFilePath Condition="'$(_MSDeployParametersFilePath)' == ''">$(PublishIntermediateTempPath)$(MSBuildProjectName).Parameters.xml</_MSDeployParametersFilePath>
  </PropertyGroup>

  <ItemGroup>
    <_ConfigFiles Include="$(_MsDeploySourceManifestPath);$(_MSDeployParametersFilePath)" />
  </ItemGroup>
  
  <!--
  ***********************************************************************************************
  TARGET : PrepareForMsDeployPublish
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <PrepareForMsDeployPublishDependsOn>
      $(PrepareForMsDeployPublishDependsOn);
    </PrepareForMsDeployPublishDependsOn>
  </PropertyGroup>

  <Target Name="PrepareForMsDeployPublish" DependsOnTargets="$(PrepareForMsDeployPublishDependsOn)">
    <MakeDir Directories="$(PublishIntermediateTempPath)" Condition="!Exists('$(PublishIntermediateTempPath)')" ContinueOnError="true"/>
    <Delete Files="@(_ConfigFiles)" ContinueOnError="true" />
    <Touch AlwaysCreate="true" Files="@(_ConfigFiles)" ContinueOnError="true" />
  </Target>
  
  <!--
  ***********************************************************************************************
  TARGET : CreateManifestFiles
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <CreateManifestFilesDependsOn>
      $(CreateManifestFilesDependsOn);
    </CreateManifestFilesDependsOn>
  </PropertyGroup>

  <Target Name="CreateManifestFiles" DependsOnTargets="$(CreateManifestFilesDependsOn)">

    <ItemGroup>
      <MsDeploySourceManifest Remove="@(MsDeploySourceManifest)" />
      
      <MsDeploySourceManifest Include="IisApp" >
        <Path>$(PublishIntermediateOutputPath)</Path>
      </MsDeploySourceManifest>
    </ItemGroup>
    
    <CreateManifestFile 
      Manifests="@(MsDeploySourceManifest)" 
      ManifestFile="$(_MsDeploySourceManifestPath)" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : CreateParameterFiles
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <CreateParameterFilesDependsOn>
      $(CreateParameterFilesDependsOn);
      </CreateParameterFilesDependsOn>
  </PropertyGroup>

  <Target Name="CreateParameterFiles" DependsOnTargets="$(CreateParameterFilesDependsOn)">

    <!--Parameterize the default value of the Path-->
    <RegexEscape Text="$(PublishIntermediateOutputPath)">
      <Output TaskParameter="Result" PropertyName="_Escaped_PublishIntermediateOutputPath" />
    </RegexEscape>
    
    <ItemGroup>    
      <MsDeployDeclareParameters Remove="@(MsDeployDeclareParameters)" />
      
      <MsDeployDeclareParameters Include="IIS Web Application Name" >
        <Kind>ProviderPath</Kind>
        <Scope>IisApp</Scope>
        <Match>^$(_Escaped_PublishIntermediateOutputPath)$</Match>
        <Description></Description>
        <DefaultValue>$(DeployIisAppPath)</DefaultValue>
        <Value>$(DeployIisAppPath)</Value>
        <Tags>IisApp</Tags>
        <Priority></Priority>
        <ExcludeFromSetParameter>false</ExcludeFromSetParameter>
      </MsDeployDeclareParameters>
    </ItemGroup>
    
    <CreateParameterFile
      Parameters="@(MsDeployDeclareParameters)"
      DeclareSetParameterFile="$(_MSDeployParametersFilePath)"
      IncludeDefaultValue="True"
      GenerateFileEvenIfEmpty="True" />
    
  </Target>
    <!--
  ***********************************************************************************************
  TARGET : MSDeployPublish
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <MSDeployPublishDependsOn>
      $(MSDeployPublishDependsOn);
      PrepareForMsDeployPublish;
      CreateManifestFiles;
      CreateParameterFiles;
    </MSDeployPublishDependsOn>
  </PropertyGroup>

  <Target Name="MSDeployPublish" DependsOnTargets="$(MSDeployPublishDependsOn)">
    <ValidateParameter
        ParameterName="MsDeployServiceUrl"
        ParameterValue="$(MsDeployServiceUrl)"/>

      <ValidateParameter
      ParameterName="DeployIisAppPath"
      ParameterValue="$(DeployIisAppPath)"/>

      <ValidateParameter
      ParameterName="UserName"
      ParameterValue="$(UserName)"/>

    <PropertyGroup>
      <MSDeployPublishSourceType>manifest</MSDeployPublishSourceType>
      <MSDeployPublishSourceRoot>$(_MsDeploySourceManifestPath)</MSDeployPublishSourceRoot>

      <!--Destination is alway a manifest-->
      <MSDeployPublishDestinationType>auto</MSDeployPublishDestinationType>
      <MSDeployPublishDestinationRoot></MSDeployPublishDestinationRoot>

      <PublishEnableLinks Condition="'$(PublishEnableLinks)' == ''"></PublishEnableLinks>
      <PublishDisableLinks Condition="'$(PublishDisableLinks)' == ''">AppPoolExtension;ContentExtension;CertificateExtension</PublishDisableLinks>

      <AuthType Condition="'$(AuthType)'==''" >Basic</AuthType>
      <RetryAttemptsForDeployment Condition=" '$(RetryAttemptsForDeployment)' == '' ">2</RetryAttemptsForDeployment>
      <MsDeployDoNotDeleteRule Condition="$(SkipExtraFilesOnServer) == 'true'">DoNotDeleteRule</MsDeployDoNotDeleteRule>
      <_EnableRuleList>$(MsDeployDoNotDeleteRule)</_EnableRuleList>

      <MSDeployUseChecksum Condition=" '$(MSDeployUseChecksum)' == '' ">false</MSDeployUseChecksum>
      <AllowUntrustedCertificate Condition=" '$(AllowUntrustedCertificate)' == '' ">false</AllowUntrustedCertificate>

      <EnableOptimisticParameterDefaultValue Condition="$(EnableOptimisticParameterDefaultValue) == ''">true</EnableOptimisticParameterDefaultValue>
      <EnableMSDeployAppOffline Condition="'$(EnableMSDeployAppOffline)' == ''">true</EnableMSDeployAppOffline>

      <!-- Forcing File preview to be a boolean value -->
      <FilePreview Condition="'$(FilePreview)' != 'true'">false</FilePreview>

      <!-- UserAgent string sent to msdeploy -->
      <_MSDeployUserAgentSource>CmdLine</_MSDeployUserAgentSource>
      <_MSDeployUserAgent>VS$(_MSDeployUserAgentSource)</_MSDeployUserAgent>
    </PropertyGroup>

    <!-- Normalize service url such as convert a server name to format like https://<server>:8172/msdeploy.axd-->
    <NormalizeServiceUrl ServiceUrl="$(MsDeployServiceUrl)" UseWMSVC="true" UseRemoteAgent="false">
      <Output TaskParameter="ResultUrl" PropertyName="MsDeployServiceUrl" />
    </NormalizeServiceUrl>

    <!--  Data Passed to MSDeploy -->
    <ItemGroup>
      <MsDeploySourceProviderSetting Remove="@(MsDeploySourceProviderSetting)" />
      <MsDeploySourceProviderSetting Include="$(MSDeployPublishSourceType)">
        <Path>$(MSDeployPublishSourceRoot)</Path>
      </MsDeploySourceProviderSetting>

      <MsDeployDestinationProviderSetting Remove="@(MsDeployDestinationProviderSetting)" />
      <MsDeployDestinationProviderSetting Include="$(MSDeployPublishDestinationType)">
        <Path>$(MSDeployPublishDestinationRoot)</Path>
        <ComputerName>$(MsDeployServiceUrl)</ComputerName>
        <UserName>$(UserName)</UserName>
        <Password>$(Password)</Password>
        <EncryptPassword>$(DeployEncryptKey)</EncryptPassword>
        <IncludeAcls>False</IncludeAcls>
        <AuthType>$(AuthType)</AuthType>
      </MsDeployDestinationProviderSetting>
    </ItemGroup>

    <!-- Additional destination provider settings -->
    <ItemGroup>
      <MsDeployAdditionalDestinationProviderSettings Include="$(MSDeployEncryptProviderName)">
        <Name>WebConfigEncryptProvider</Name>
        <Value>$(MSDeployWebConfigEncryptProvider)</Value>
      </MsDeployAdditionalDestinationProviderSettings>
    </ItemGroup>

    <VSMSDeploy
        Condition="'$(UseMsdeployExe)' != 'true'"
        Source="@(MsDeploySourceProviderSetting)"
        Destination="@(MsDeployDestinationProviderSetting)"
        DisableLink="$(PublishDisableLinks)"
        EnableLink="$(PublishEnableLinks)"
        AllowUntrustedCertificate="$(AllowUntrustedCertificate)"
        SkipExtraFilesOnServer="$(SkipExtraFilesOnServer)"
        SkipRuleItems="@(MsDeploySkipRules)"
        ImportSetParametersItems="$(_MSDeployParametersFilePath)"
        WhatIf="$(FilePreview)"
        RetryAttempts="$(RetryAttemptsForDeployment)"
        EnableMSDeployBackup="$(EnableMSDeployBackup)"
        EnableMSDeployAppOffline="$(EnableMSDeployAppOffline)"
        AdditionalDestinationProviderOptions="@(MsDeployAdditionalDestinationProviderSettings)"
        UseChecksum="$(MSDeployUseChecksum)"
        UserAgent="$(_MSDeployUserAgent)">
      <Output TaskParameter="Result" PropertyName="_PublishResult" />
    </VSMSDeploy>

    <PropertyGroup>
      <_EnableRuleList>$(MsDeployDoNotDeleteRule)</_EnableRuleList>
      <_EnableRuleList Condition="'$(_EnableRuleList)'=='' and '$(EnableMSDeployAppOffline)'=='true'">AppOffline</_EnableRuleList>
      <_EnableRuleList Condition="'$(_EnableRuleList)'!='' and '$(EnableMSDeployAppOffline)'=='true'">$(_EnableRuleList);AppOffline</_EnableRuleList>
      <_EnableRuleList Condition="'$(_EnableRuleList)'=='' and '$(MSDeployEnableWebConfigEncryptRule)'=='true'">EncryptWebConfig</_EnableRuleList>
      <_EnableRuleList Condition="'$(_EnableRuleList)'!='' and '$(MSDeployEnableWebConfigEncryptRule)'=='true'">$(_EnableRuleList);EncryptWebConfig</_EnableRuleList>
    </PropertyGroup>
    <MSdeploy
          Condition="'$(UseMsdeployExe)' == 'true'"
          Verb="sync"
          WhatIf="$(FilePreview)"
          Source="@(MsDeploySourceProviderSetting)"
          Destination="@(MsDeployDestinationProviderSetting)"
          DisableLink="$(PublishDisableLinks)"
          EnableLink="$(PublishEnableLinks)"
          EnableRule="$(_EnableRuleList)"
          AllowUntrusted="$(AllowUntrustedCertificate)"
          SkipRuleItems="@(MsDeploySkipRules)"
          ImportSetParametersItems="$(_MSDeployParametersFilePath)"
          RetryAttempts="$(RetryAttemptsForDeployment)"
          AdditionalDestinationProviderOptions="@(MsDeployAdditionalDestinationProviderSettings)"
          UseChecksum="$(MSDeployUseChecksum)"
          UserAgent="$(_MSDeployUserAgent)"
          ExePath="$(MSDeployPath)" />
  </Target>


  <!--
  ***********************************************************************************************
  Item Definitions
  ***********************************************************************************************
 -->

  <ItemDefinitionGroup>
    <MsDeploySourceProviderSetting>
      <Path></Path>
      <ComputerName></ComputerName>
      <!--<Wmsvc></Wmsvc>  Not supported yet-->
      <UserName></UserName>
      <Password></Password>
      <EncryptPassword></EncryptPassword>
      <IncludeAcls></IncludeAcls>
      <authType></authType>
      <prefetchPayload></prefetchPayload>
    </MsDeploySourceProviderSetting>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup>
    <MsDeployDestinationProviderSetting>
      <Path></Path>
      <ComputerName></ComputerName>
      <!--<Wmsvc></Wmsvc>  Not supported yet-->
      <UserName></UserName>
      <Password></Password>
      <EncryptPassword></EncryptPassword>
      <IncludeAcls></IncludeAcls>
      <authType></authType>
      <prefetchPayload></prefetchPayload>
    </MsDeployDestinationProviderSetting>
  </ItemDefinitionGroup>
 
  <!--
  DeploymentSkipRule(string skipAction, string objectName, string absolutePath, string XPath);-->
  <ItemDefinitionGroup>
    <MsDeploySkipRules>
      <SkipAction></SkipAction>
      <ObjectName></ObjectName>
      <AbsolutePath></AbsolutePath>
      <XPath></XPath>
      <KeyAttribute></KeyAttribute>
      <!--Source, Destination, Both(the default)-->
      <Apply></Apply>
    </MsDeploySkipRules>
  </ItemDefinitionGroup>

  <!-- AdditionalProviderSettings denote the additionProviderSetting need to be set in the manifest files-->
  <ItemDefinitionGroup>
    <MsDeploySourceManifest>
      <Path>Unknown</Path>
      <AdditionalProviderSettings></AdditionalProviderSettings>
    </MsDeploySourceManifest>
  </ItemDefinitionGroup>

  <!--
  DeploymentParameter(string name, string type, string scope, string match, string description, string defaultValue); -->
  <ItemDefinitionGroup>
    <MsDeployDeclareParameters>
      <Kind></Kind>
      <Scope></Scope>
      <Match></Match>
      <Description></Description>
      <DefaultValue></DefaultValue>
      <Tags></Tags>
      <ExcludeFromSetParameter></ExcludeFromSetParameter>
    </MsDeployDeclareParameters>
  </ItemDefinitionGroup>
  
</Project>
