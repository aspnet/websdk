<!--
***********************************************************************************************
Microsoft.DotNet.Publish.MSDeployPackage.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your web deploy projects from the command-line or the IDE.

This file defines the steps in the standard build process to deploy web application projects.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  ***********************************************************************************************
  Including the tasks
  ***********************************************************************************************
 -->
  <UsingTask TaskName="MSDeploy" AssemblyFile="$(PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="VSMSDeploy" AssemblyFile="$(PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="NormalizeServiceUrl" AssemblyFile="$(PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="ValidateParameter" AssemblyFile="$(PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="RegexEscape" AssemblyFile="$(PublishTaskAssemblyFullPath)"/>
  <UsingTask TaskName="CreateManifestFile" AssemblyFile="$(PublishTaskAssemblyFullPath)" />
  <UsingTask TaskName="CreateParameterFile" AssemblyFile="$(PublishTaskAssemblyFullPath)" />

  <PropertyGroup>
    <DotNetPublishFiles>
      $(DotNetPublishFiles);
      MSDeployPackagePublish;
    </DotNetPublishFiles>
  </PropertyGroup>


  <PropertyGroup>
    <_destinationFolder Condition="'$(_destinationFolder)' == ''">$([System.IO.Path]::GetDirectoryName($(DesktopBuildPackageLocation)))\</_destinationFolder>
    <_MsDeploySourceManifestPath Condition="'$(_MsDeploySourceManifestPath)' == ''">$(_destinationFolder)$(MSBuildProjectName).SourceManifest.xml</_MsDeploySourceManifestPath>
    <_MSDeployParametersFilePath Condition="'$(_MSDeployParametersFilePath)' == ''">$(_destinationFolder)$(MSBuildProjectName).Parameters.xml</_MSDeployParametersFilePath>
  </PropertyGroup>

  <ItemGroup>
    <_ConfigFiles Include="$(_MsDeploySourceManifestPath);$(_MSDeployParametersFilePath)" />
  </ItemGroup>

  <!--
  ***********************************************************************************************
  TARGET : PrepareForMsDeployPublish
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <PrepareForMsDeployPublishDependsOn>
      $(PrepareForMsDeployPublishDependsOn);
    </PrepareForMsDeployPublishDependsOn>
  </PropertyGroup>

  <Target Name="PrepareForMsDeployPublish" DependsOnTargets="$(PrepareForMsDeployPublishDependsOn)">
    <MakeDir Directories="$(_destinationFolder)" Condition="!Exists('$(_destinationFolder)')" ContinueOnError="true"/>
    <Delete Files="@(_ConfigFiles)" ContinueOnError="true" />
    <Touch AlwaysCreate="true" Files="@(_ConfigFiles)" ContinueOnError="true" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : CreateManifestFiles
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <CreateManifestFilesDependsOn>
      $(CreateManifestFilesDependsOn);
    </CreateManifestFilesDependsOn>
  </PropertyGroup>

  <Target Name="CreateManifestFiles" DependsOnTargets="$(CreateManifestFilesDependsOn)">

    <ItemGroup>
      <MsDeploySourceManifest Remove="@(MsDeploySourceManifest)" />

      <MsDeploySourceManifest Include="IisApp" >
        <Path>$(PublishIntermediateOutputPath)</Path>
      </MsDeploySourceManifest>
    </ItemGroup>

    <CreateManifestFile
      Manifests="@(MsDeploySourceManifest)"
      ManifestFile="$(_MsDeploySourceManifestPath)" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : CreateParameterFiles
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <CreateParameterFilesDependsOn>
      $(CreateParameterFilesDependsOn);
    </CreateParameterFilesDependsOn>
  </PropertyGroup>

  <Target Name="CreateParameterFiles" DependsOnTargets="$(CreateParameterFilesDependsOn)">

    <!--Parameterize the default value of the Path-->
    <RegexEscape Text="$(PublishIntermediateOutputPath)">
      <Output TaskParameter="Result" PropertyName="_Escaped_PublishIntermediateOutputPath" />
    </RegexEscape>

    <ItemGroup>
      <MsDeployDeclareParameters Remove="@(MsDeployDeclareParameters)" />

      <MsDeployDeclareParameters Include="IIS Web Application Name" >
        <Kind>ProviderPath</Kind>
        <Scope>IisApp</Scope>
        <Match>^$(_Escaped_PublishIntermediateOutputPath)$</Match>
        <Description></Description>
        <DefaultValue>$(DeployIisAppPath)</DefaultValue>
        <Value>$(DeployIisAppPath)</Value>
        <Tags>IisApp</Tags>
        <Priority></Priority>
        <ExcludeFromSetParameter>false</ExcludeFromSetParameter>
      </MsDeployDeclareParameters>
    </ItemGroup>

    <CreateParameterFile
      Parameters="@(MsDeployDeclareParameters)"
      DeclareSetParameterFile="$(_MSDeployParametersFilePath)"
      IncludeDefaultValue="True"
      GenerateFileEvenIfEmpty="True" />

  </Target>
  
  <!--
  ***********************************************************************************************
  TARGET : MSDeployPackagePublish
  ***********************************************************************************************
 -->
  <PropertyGroup>
    <MSDeployPackagePublishDependsOn>
      $(MSDeployPackagePublishDependsOn);
      PrepareForMsDeployPublish;
      CreateManifestFiles;
      CreateParameterFiles;
    </MSDeployPackagePublishDependsOn>
  </PropertyGroup>

  <Target Name="MSDeployPackagePublish" DependsOnTargets="$(MSDeployPackagePublishDependsOn)">

    <ValidateParameter
    ParameterName="DeployIisAppPath"
    ParameterValue="$(DeployIisAppPath)"/>

    <PropertyGroup>
      <MSDeployPublishSourceType>manifest</MSDeployPublishSourceType>
      <MSDeployPublishSourceRoot>$(_MsDeploySourceManifestPath)</MSDeployPublishSourceRoot>

      <!--Destination is alway a manifest-->
      <MSDeployPublishDestinationType>Package</MSDeployPublishDestinationType>
      <MSDeployPublishDestinationRoot>$(DesktopBuildPackageLocation)</MSDeployPublishDestinationRoot>
      
      <RetryAttemptsForDeployment Condition=" '$(RetryAttemptsForDeployment)' == '' ">2</RetryAttemptsForDeployment>
      <MsDeployDoNotDeleteRule Condition="$(SkipExtraFilesOnServer) == 'true'">DoNotDeleteRule</MsDeployDoNotDeleteRule>
      <_EnableRuleList>$(MsDeployDoNotDeleteRule)</_EnableRuleList>

      <PublishEnableLinks Condition="'$(PublishEnableLinks)' == ''"></PublishEnableLinks>
      <PublishDisableLinks Condition="'$(PublishDisableLinks)' == ''">AppPoolExtension;ContentExtension;CertificateExtension</PublishDisableLinks>

      <!-- UserAgent string sent to msdeploy -->
      <_MSDeployUserAgentSource>CmdLine</_MSDeployUserAgentSource>
      <_MSDeployUserAgent>VS$(_MSDeployUserAgentSource)</_MSDeployUserAgent>

    </PropertyGroup>

    <!--  Data Passed to MSDeploy -->
    <ItemGroup>
      <MsDeploySourceProviderSetting Remove="@(MsDeploySourceProviderSetting)" />
      <MsDeploySourceProviderSetting Include="$(MSDeployPublishSourceType)">
        <Path>$(MSDeployPublishSourceRoot)</Path>
      </MsDeploySourceProviderSetting>

      <MsDeployDestinationProviderSetting Remove="@(MsDeployDestinationProviderSetting)" />
      <MsDeployDestinationProviderSetting Include="$(MSDeployPublishDestinationType)">
        <Path>$(MSDeployPublishDestinationRoot)</Path>
      </MsDeployDestinationProviderSetting>
    </ItemGroup>

    <VSMSDeploy Condition="'$(UseMsdeployExe)' != 'true'"
       MSDeployVersionsToTry="$(_MSDeployVersionsToTry)"
       Source="@(MsDeploySourceProviderSetting)"
       Destination="@(MsDeployDestinationProviderSetting)"
       DeploymentTraceLevel="$(PackageTraceLevel)"
       DisableLink="$(PublishDisableLinks)"
       EnableLink="$(PublishEnableLinks)"
       ImportDeclareParametersItems="$(_MSDeployParametersFilePath)"
       ReplaceRuleItems="@(MsDeployReplaceRules)"
       RetryAttempts="$(RetryAttemptsForDeployment)">
      <Output TaskParameter="Result" PropertyName="PackageResult" />
    </VSMSDeploy>

    <MSdeploy
      Condition="'$(UseMsdeployExe)' == 'true'"
      Verb="sync"
      Source="@(MsDeploySourceProviderSetting)"
      Destination="@(MsDeployDestinationProviderSetting)"
      DisableLink="$(PublishDisableLinks)"
      EnableLink="$(PublishEnableLinks)"
      ImportDeclareParametersItems="$(_MSDeployParametersFilePath)"
      ReplaceRuleItems="@(MsDeployReplaceRules)"
      RetryAttempts="$(RetryAttemptsForDeployment)"
      ExePath="$(MSDeployPath)"
      />
  </Target>


  <!--
  ***********************************************************************************************
  Item Definitions
  ***********************************************************************************************
 -->

  <ItemDefinitionGroup>
    <MsDeploySourceProviderSetting>
      <Path></Path>
      <ComputerName></ComputerName>
      <!--<Wmsvc></Wmsvc>  Not supported yet-->
      <UserName></UserName>
      <Password></Password>
      <EncryptPassword></EncryptPassword>
      <IncludeAcls></IncludeAcls>
      <authType></authType>
      <prefetchPayload></prefetchPayload>
    </MsDeploySourceProviderSetting>
  </ItemDefinitionGroup>
  
  <ItemDefinitionGroup>
    <MsDeployDestinationProviderSetting>
      <Path></Path>
      <ComputerName></ComputerName>
      <!--<Wmsvc></Wmsvc>  Not supported yet-->
      <UserName></UserName>
      <Password></Password>
      <EncryptPassword></EncryptPassword>
      <IncludeAcls></IncludeAcls>
      <authType></authType>
      <prefetchPayload></prefetchPayload>
    </MsDeployDestinationProviderSetting>
  </ItemDefinitionGroup>
  
  <!--
  DeploymentSkipRule(string skipAction, string objectName, string absolutePath, string XPath);-->
  <ItemDefinitionGroup>
    <MsDeploySkipRules>
      <SkipAction></SkipAction>
      <ObjectName></ObjectName>
      <AbsolutePath></AbsolutePath>
      <XPath></XPath>
      <KeyAttribute></KeyAttribute>
      <!--Source, Destination, Both(the default)-->
      <Apply></Apply>
    </MsDeploySkipRules>
  </ItemDefinitionGroup>

  <!-- AdditionalProviderSettings denote the additionProviderSetting need to be set in the manifest files-->
  <ItemDefinitionGroup>
    <MsDeploySourceManifest>
      <Path>Unknown</Path>
      <AdditionalProviderSettings></AdditionalProviderSettings>
    </MsDeploySourceManifest>
  </ItemDefinitionGroup>
</Project>
